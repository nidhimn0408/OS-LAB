#include <stdio.h>
int main()
{
int Max[10][10], need[10][10], alloc[10][10], avail[10], finish[10], safeSequence[10];
int p, r, i, j, k, count=0 ,index=0;
count = 0;

printf("Enter the no of processes : ");
scanf("%d", &p);

printf("Enter the no of resources : ");
scanf("%d", &r);

printf("Enter the Max Matrix for each process : \n");
for(i = 0; i < p; i++)
{
	for(j = 0; j < r; j++) scanf("%d", &Max[i][j]);
}

printf("Enter the allocation for each process : \n");
for(i = 0; i < p; i++)
{
	for(j = 0; j < r; j++) scanf("%d", &alloc[i][j]);	
}

printf("Enter the Available Resources : \n");
for(i = 0; i < r; i++) {
    scanf("%d", &avail[i]);
}

for(i=0;i<p;i++) finish[i]=0;

for(i = 0; i < p; i++){
    for(j = 0; j < r; j++){
        need[i][j] = Max[i][j] - alloc[i][j];
    }
}

for(i=0;i<p;i++){ //if u have 5 processes , total loop shd be run 5 times -> as u might get one right process each time
    for( j=0;j<p;j++){
        if(finish[j]==0){
            int flag=1;
            for(k=0;k<r;k++){
                if(need[j][k] > avail[k]) flag=0;
            }
            if(flag==1){
                count++;
                for(k=0;k<r;k++){
                    avail[k] += alloc[j][k];
                    finish[j]=1;
                }
                safeSequence[index++]=j;
            }
        }
    }
}
if(count==p){
    printf("safe sequence is : ");
    for(i=0;i<p;i++) printf("%d ",safeSequence[i]);
}
else printf("unsafe sequence\n");
}		
			
